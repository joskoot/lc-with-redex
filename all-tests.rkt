#lang racket ; File all-tests.rkt
(current-library-collection-paths (cons (current-directory) (current-library-collection-paths)))
(require "test-curried-lc-grammar.rkt")
(require "test-free-vars.rkt")
(require "test-alpha-congruence.rkt")
(require "test-curry.rkt")
(require "test-beta-reductor.rkt")
(require "test-beta-eta-reductor.rkt")
(require "width-first-traversal.rkt")
(require "test-normal-order-beta-reductor.rkt")
(require "applicative-order-y-combinator.rkt")
(require "test-booleans.rkt")
(require "test-pairs.rkt")
(require "test-pair-numerals.rkt")
(require "primes.rkt")
(require "church-numerals.rkt")
(require "one-point-basis.rkt")
(require "term-generator.rkt")
(require "test-y-derivation-in-scheme.rkt")
(read-line)
